[{"/home/manav/github/draftstorm-client/src/index.js":"1","/home/manav/github/draftstorm-client/src/App.js":"2","/home/manav/github/draftstorm-client/src/components/Chat/index.js":"3","/home/manav/github/draftstorm-client/src/components/Join/index.js":"4","/home/manav/github/draftstorm-client/src/components/Canvas/index.js":"5","/home/manav/github/draftstorm-client/src/components/ToolKit/index.js":"6"},{"size":174,"mtime":1611677888560,"results":"7","hashOfConfig":"8"},{"size":733,"mtime":1611850815981,"results":"9","hashOfConfig":"8"},{"size":2221,"mtime":1611937562713,"results":"10","hashOfConfig":"8"},{"size":941,"mtime":1611682781817,"results":"11","hashOfConfig":"8"},{"size":5112,"mtime":1612017445335,"results":"12","hashOfConfig":"8"},{"size":3816,"mtime":1612022617775,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1xs1kts",{"filePath":"17","messages":"18","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/manav/github/draftstorm-client/src/index.js",[],["30","31"],"/home/manav/github/draftstorm-client/src/App.js",["32","33","34","35","36","37","38"],"import React, { useState, useEffect } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nimport Join from './components/Join';\nimport Chat from './components/Chat';\n\nimport './App.css';\n\nconst ENDPOINT = \"http://127.0.0.1:5000\";\n\n\nfunction App() {\n\n  const [res, setRes] = useState(\"\");\n\n  // useEffect(() => {\n  //   console.log(\"useEff CALLED\")\n  //   const socket = socketIOClient(ENDPOINT);\n  //   socket.on(\"FromAPI\", data => {\n  //     setRes(data);\n  //   });\n  // }, []);\n\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Join} />\n      <Route path=\"/chat\" component={Chat} />\n    </Router>\n  );\n}\n\nexport default App;\n","/home/manav/github/draftstorm-client/src/components/Chat/index.js",["39","40","41","42","43","44"],"import React, { useState, useEffect, useRef, createRef } from 'react';\nimport { BrowserRouter as Redirect } from 'react-router-dom';\nimport socketIOClient from 'socket.io-client';\nimport queryString from 'query-string';\nimport Canvas from '../Canvas';\nimport { Row, Col } from 'antd';\n\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nconst ENDPOINT = 'http://127.0.0.1:5000';\n\nlet socket;\n\nconst Chat = ({ location, history, match }) => {\n  // console.log(\"location : \", location);\n  // console.log(\"history : \", history);\n  // console.log(\"match : \", match);\n\n\n  const [user, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  const [wlcmMsg, setWlcmMsg] = useState(\"\");\n  const [userNotf, setUserNotf] = useState(\"\");\n  const [sktLoaded, setSktLoaded] = useState(false);\n\n\n  useEffect(() => {\n    // console.log(\"useEffect called\");\n\n    const { room, user } = queryString.parse(location.search);\n    setRoom(room);\n    setName(user);\n\n    socket = socketIOClient(ENDPOINT);\n    setSktLoaded(true);\n\n    socket.emit('joinRoom', {\n      userName: user,\n      roomName: room\n    }, (err) => {\n      if (err) {\n\n        // STILL PROBLEM WITH REDURECT\n        // alert(err);\n        // console.log(\"REDIRECT NOW ?\");\n        setRedirect(true);\n      }\n    })\n\n    // // cleanup\n    return (() => {\n      // socket.emit('disconnect');\n      socket.off();\n    })\n\n    // socket.emit('sendAll', {  msg: 'for all'})\n  }, [match.action, location.search])\n\n\n  useEffect(() => {\n    socket.on('selfWelcome', (data) => {\n      setWlcmMsg(data.text);\n      // alert(data.text);\n      // console.log(\"selfWelcome : \", data.text);\n    })\n  }, [wlcmMsg])\n\n  useEffect(() => {\n    socket.on('userNotification', (data) => {\n      setUserNotf(data.text);\n      // alert(data.text);\n      // console.log(\"userNotification : \", data.text);\n    })\n  }, [userNotf])\n\n  if (redirect) {\n    // console.log(\"redirect to true hai\")\n    return (<Redirect to=\"/hi\" />);\n  } else {\n    return (\n      <>\n        {/* <h1>Chat</h1> */}\n        {sktLoaded ?\n          (<Canvas socket={socket} />)\n          :\n          (<>NO CANVAS</>)}\n      </>\n    )\n  }\n}\n\nexport default Chat;\n","/home/manav/github/draftstorm-client/src/components/Join/index.js",[],"/home/manav/github/draftstorm-client/src/components/Canvas/index.js",["45"],"import React, { useState, useRef, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport ToolKit from '../ToolKit';\n\n// const strokeColour = \"black\";\n\nconst Canvas = (props) => {\n\n  let prevX, prevY, currX, currY;\n  let pressed = false;\n  let { socket } = props;\n  // console.log(\"SOCKET : \", socket);\n\n  const canvasRef = useRef(null);\n  const memCanvasRef = useRef(null);\n\n\n  const [strokeColour, setStrokeColour] = useState(\"#141414\");\n  const [lineWidth, setLineWidth] = useState(1);\n\n\n  const handleResize = () => {\n\n    console.log(\"handleResize called.\");\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // console.log(\"=> ctx\", ctx);\n\n    var memCanvas = memCanvasRef.current;\n    var memCtx = memCanvas.getContext('2d');\n\n\n    let oldWidth = canvas.width;\n    let oldHeight = canvas.height;\n    let newWidth = canvas.parentElement.clientWidth;\n    let newHeight = canvas.parentElement.clientHeight;\n\n\n    // Change Memory Canvas Width\n    memCanvas.width = newWidth;\n    memCanvas.height = newHeight;\n    // Redraw Memory Canvas\n    memCtx.scale(newWidth / oldWidth, newHeight / oldHeight);\n    memCtx.drawImage(canvas, 0, 0);\n    // memCtx.scale(newWidth / oldWidth, newHeight / oldHeight);\n    // console.log(\"SCALE VALUES : \", newWidth / oldWidth, \" and \", newHeight / oldHeight)\n\n    // Now Change Original Canvas\n    canvas.width = newWidth;\n    canvas.height = newHeight;\n    ctx.drawImage(memCanvas, 0, 0);\n\n\n    // ctx.canvas.width = 0.95 * window.innerWidth;\n    // ctx.canvas.height = 0.95 * window.innerHeight;\n\n\n    // ctx.canvas.width = canvas.parentElement.clientWidth;\n    // ctx.canvas.height = canvas.parentElement.clientHeight;\n\n  }\n\n  // const clearCanvas = () => {\n  //   const canvas = canvasRef.current\n  //   const ctx = canvas.getContext('2d');\n  //   ctx.clearRect(0, 0, canvas.width, canvas.height);\n  // }\n\n  useEffect(() => {\n\n    // console.log(\"rect vala useEff called.\");\n    const canvas = canvasRef.current\n    // console.log(\"URGENT ++++++++++++ => \", canvas.parentElement.clientWidth);\n\n\n    const ctx = canvas.getContext('2d');\n    // console.log(\"Window : \", window);\n    // ctx.canvas.width = 0.95 * window.innerWidth;\n    // ctx.canvas.height = 0.95 * window.innerHeight;\n    ctx.canvas.width = canvas.parentElement.clientWidth;\n    ctx.canvas.height = canvas.parentElement.clientHeight;\n\n    // console.log(\"Info : \", ctx.canvas);\n\n    // //Our first draw\n    // ctx.fillStyle = '#000000'\n    // ctx.fillRect(15, 0, ctx.canvas.width / 7, ctx.canvas.height)\n\n\n    window.addEventListener('resize', handleResize);\n  }, [])\n\n  const handleMouseDown = (e) => {\n\n\n    const canvas = canvasRef.current\n    // console.log(\"canvas.offsetLeft : \", canvas.getBoundingClientRect().left)\n    pressed = true;\n    prevX = e.pageX - canvas.getBoundingClientRect().left;\n    prevY = e.pageY - canvas.getBoundingClientRect().top;\n\n    socket.emit('c_mouse_down', {\n      prevX: prevX,\n      prevY: prevY,\n      strokeColour: strokeColour,\n      lineWidth: lineWidth\n    })\n  }\n\n  const handleMouseMove = (e) => {\n\n    const canvas = canvasRef.current\n    if (pressed) {\n      currX = e.pageX - canvas.getBoundingClientRect().left;\n      currY = e.pageY - canvas.getBoundingClientRect().top;\n\n      socket.emit('c_mouse_move', {\n        prevX: prevX,\n        prevY: prevY,\n        currX: currX,\n        currY: currY\n      })\n      prevX = currX;\n      prevY = currY;\n    }\n  }\n\n  const handleMouseUp = () => {\n    console.log(\"pressed : \", pressed);\n    pressed = false;\n  }\n\n  const handleMouseOut = () => {\n    pressed = false;\n  }\n\n  useEffect(() => {\n    console.log(\"on vala useEff called.\");\n    const canvas = canvasRef.current\n    const ctx = canvas.getContext('2d')\n\n    socket.on('s_mouse_down', (payload) => {\n      // console.log(\"stroke colour jo mila \", payload.strokeColour)\n      ctx.beginPath();\n      ctx.moveTo(payload.prevX - 1, payload.prevY - 1);\n      ctx.strokeStyle = payload.strokeColour;\n      ctx.lineWidth = payload.lineWidth;\n      ctx.lineTo(payload.prevX, payload.prevY);\n      ctx.stroke();\n    })\n\n\n    socket.on('s_mouse_move', (payload) => {\n\n      ctx.moveTo(payload.prevX, payload.prevY);\n      ctx.lineTo(payload.currX, payload.currY);\n      ctx.stroke();\n    })\n\n  }, [socket])\n\n\n  return (\n    <>\n      <canvas\n        style={{\n          border: '1px solid red',\n          width: '100vw',\n          height: '100vh',\n          backgroundColor: '#f7ede2',\n          // position: 'absolute'\n        }}\n        onMouseDown={(e) => handleMouseDown(e)}\n        onMouseMove={(e) => handleMouseMove(e)}\n        onMouseUp={handleMouseUp}\n        onMouseOut={handleMouseOut}\n        ref={canvasRef}\n        {...props}\n      ></canvas>\n      <canvas\n        id=\"memCanvas\"\n        ref={memCanvasRef}\n        style={{ display: 'none' }}\n      >\n      </canvas>\n      <ToolKit\n        setStrokeColour={setStrokeColour}\n        lineWidth={lineWidth}\n        setLineWidth={setLineWidth}\n\n      />\n      {/* <button onClick={clearCanvas}>Clear Canvas</button> */}\n    </>\n  );\n}\n\nexport default Canvas;","/home/manav/github/draftstorm-client/src/components/ToolKit/index.js",["46","47","48","49","50","51","52","53","54","55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":27,"nodeType":"62","messageId":"63","endLine":1,"endColumn":36},{"ruleId":"60","severity":1,"message":"64","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":22},{"ruleId":"60","severity":1,"message":"65","line":3,"column":35,"nodeType":"62","messageId":"63","endLine":3,"endColumn":41},{"ruleId":"60","severity":1,"message":"66","line":3,"column":50,"nodeType":"62","messageId":"63","endLine":3,"endColumn":54},{"ruleId":"60","severity":1,"message":"67","line":10,"column":7,"nodeType":"62","messageId":"63","endLine":10,"endColumn":15},{"ruleId":"60","severity":1,"message":"68","line":15,"column":10,"nodeType":"62","messageId":"63","endLine":15,"endColumn":13},{"ruleId":"60","severity":1,"message":"69","line":15,"column":15,"nodeType":"62","messageId":"63","endLine":15,"endColumn":21},{"ruleId":"60","severity":1,"message":"70","line":1,"column":38,"nodeType":"62","messageId":"63","endLine":1,"endColumn":44},{"ruleId":"60","severity":1,"message":"71","line":1,"column":46,"nodeType":"62","messageId":"63","endLine":1,"endColumn":55},{"ruleId":"60","severity":1,"message":"72","line":6,"column":10,"nodeType":"62","messageId":"63","endLine":6,"endColumn":13},{"ruleId":"60","severity":1,"message":"73","line":6,"column":15,"nodeType":"62","messageId":"63","endLine":6,"endColumn":18},{"ruleId":"60","severity":1,"message":"74","line":21,"column":10,"nodeType":"62","messageId":"63","endLine":21,"endColumn":14},{"ruleId":"60","severity":1,"message":"75","line":22,"column":10,"nodeType":"62","messageId":"63","endLine":22,"endColumn":14},{"ruleId":"60","severity":1,"message":"76","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":14},{"ruleId":"60","severity":1,"message":"77","line":3,"column":16,"nodeType":"62","messageId":"63","endLine":3,"endColumn":20},{"ruleId":"60","severity":1,"message":"78","line":3,"column":22,"nodeType":"62","messageId":"63","endLine":3,"endColumn":30},{"ruleId":"60","severity":1,"message":"79","line":3,"column":32,"nodeType":"62","messageId":"63","endLine":3,"endColumn":42},{"ruleId":"60","severity":1,"message":"80","line":3,"column":44,"nodeType":"62","messageId":"63","endLine":3,"endColumn":49},{"ruleId":"60","severity":1,"message":"81","line":3,"column":83,"nodeType":"62","messageId":"63","endLine":3,"endColumn":89},{"ruleId":"60","severity":1,"message":"82","line":4,"column":24,"nodeType":"62","messageId":"63","endLine":4,"endColumn":36},{"ruleId":"60","severity":1,"message":"83","line":5,"column":10,"nodeType":"62","messageId":"63","endLine":5,"endColumn":21},{"ruleId":"60","severity":1,"message":"84","line":9,"column":7,"nodeType":"62","messageId":"63","endLine":9,"endColumn":16},{"ruleId":"60","severity":1,"message":"85","line":14,"column":10,"nodeType":"62","messageId":"63","endLine":14,"endColumn":22},{"ruleId":"60","severity":1,"message":"86","line":21,"column":28,"nodeType":"62","messageId":"63","endLine":21,"endColumn":37},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'socketIOClient' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'ENDPOINT' is assigned a value but never used.","'res' is assigned a value but never used.","'setRes' is assigned a value but never used.","'useRef' is defined but never used.","'createRef' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'user' is assigned a value but never used.","'room' is assigned a value but never used.","'styled' is defined but never used.","'Menu' is defined but never used.","'Dropdown' is defined but never used.","'Typography' is defined but never used.","'Radio' is defined but never used.","'Slider' is defined but never used.","'UserOutlined' is defined but never used.","'FaDotCircle' is defined but never used.","'gridStyle' is assigned a value but never used.","'handleChange' is defined but never used.","'lineWidth' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]