[{"/home/manav/github/draftstorm-client/src/index.js":"1","/home/manav/github/draftstorm-client/src/App.js":"2","/home/manav/github/draftstorm-client/src/components/Chat/index.js":"3","/home/manav/github/draftstorm-client/src/components/Join/index.js":"4","/home/manav/github/draftstorm-client/src/components/Canvas/index.js":"5","/home/manav/github/draftstorm-client/src/components/ToolKit/index.js":"6","/home/manav/github/draftstorm-client/src/components/ToolToggleButton/index.js":"7"},{"size":174,"mtime":1613235319338,"results":"8","hashOfConfig":"9"},{"size":734,"mtime":1613235319338,"results":"10","hashOfConfig":"9"},{"size":2196,"mtime":1613235319338,"results":"11","hashOfConfig":"9"},{"size":3529,"mtime":1613405576967,"results":"12","hashOfConfig":"9"},{"size":5386,"mtime":1613235319338,"results":"13","hashOfConfig":"9"},{"size":5243,"mtime":1613235319338,"results":"14","hashOfConfig":"9"},{"size":901,"mtime":1613235319338,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"193vin5",{"filePath":"19","messages":"20","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"18"},"/home/manav/github/draftstorm-client/src/index.js",[],["36","37"],"/home/manav/github/draftstorm-client/src/App.js",["38","39","40","41","42","43","44"],"import React, { useState, useEffect } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nimport Join from './components/Join';\nimport Chat from './components/Chat';\n\nimport './App.less';\n\nconst ENDPOINT = \"http://127.0.0.1:5000\";\n\n\nfunction App() {\n\n  const [res, setRes] = useState(\"\");\n\n  // useEffect(() => {\n  //   console.log(\"useEff CALLED\")\n  //   const socket = socketIOClient(ENDPOINT);\n  //   socket.on(\"FromAPI\", data => {\n  //     setRes(data);\n  //   });\n  // }, []);\n\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Join} />\n      <Route path=\"/chat\" component={Chat} />\n    </Router>\n  );\n}\n\nexport default App;\n","/home/manav/github/draftstorm-client/src/components/Chat/index.js",["45","46","47","48","49"],"import React, { useState, useEffect, useRef, createRef } from 'react';\nimport { BrowserRouter as Redirect } from 'react-router-dom';\nimport socketIOClient from 'socket.io-client';\nimport queryString from 'query-string';\nimport Canvas from '../Canvas';\nimport { Skeleton } from 'antd';\n\n\n// import './index.css';\n\nconst ENDPOINT = 'http://127.0.0.1:5000';\n\nlet socket;\n\nconst Chat = ({ location, history, match }) => {\n  // console.log(\"location : \", location);\n  // console.log(\"history : \", history);\n  // console.log(\"match : \", match);\n\n\n  const [user, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  const [wlcmMsg, setWlcmMsg] = useState(\"\");\n  const [userNotf, setUserNotf] = useState(\"\");\n  const [sktLoaded, setSktLoaded] = useState(false);\n\n\n  useEffect(() => {\n    // console.log(\"useEffect called\");\n\n    const { room, user } = queryString.parse(location.search);\n    setRoom(room);\n    setName(user);\n\n    socket = socketIOClient(ENDPOINT);\n    setSktLoaded(true);\n\n    socket.emit('joinRoom', {\n      userName: user,\n      roomName: room\n    }, (err) => {\n      if (err) {\n\n        // STILL PROBLEM WITH REDURECT\n        // alert(err);\n        // console.log(\"REDIRECT NOW ?\");\n        setRedirect(true);\n      }\n    })\n\n    // // cleanup\n    return (() => {\n      // socket.emit('disconnect');\n      socket.off();\n    })\n\n    // socket.emit('sendAll', {  msg: 'for all'})\n  }, [match.action, location.search])\n\n\n  useEffect(() => {\n    socket.on('selfWelcome', (data) => {\n      setWlcmMsg(data.text);\n      // alert(data.text);\n      // console.log(\"selfWelcome : \", data.text);\n    })\n  }, [wlcmMsg])\n\n  useEffect(() => {\n    socket.on('userNotification', (data) => {\n      setUserNotf(data.text);\n      // alert(data.text);\n      // console.log(\"userNotification : \", data.text);\n    })\n  }, [userNotf])\n\n  if (redirect) {\n    // console.log(\"redirect to true hai\")\n    return (<Redirect to=\"/hi\" />);\n  } else {\n    return (\n      <>\n        {/* <h1>Chat</h1> */}\n        {sktLoaded ?\n          (<Canvas socket={socket} />)\n          :\n          (<></>)\n        }\n      </>\n    )\n  }\n}\n\nexport default Chat;\n","/home/manav/github/draftstorm-client/src/components/Join/index.js",["50","51","52","53","54","55","56","57","58","59","60","61","62","63"],"/home/manav/github/draftstorm-client/src/components/Canvas/index.js",["64"],"import React, { useState, useRef, useEffect } from 'react';\nimport ToolKit from '../ToolKit';\n\nconst shadowBlurValue = 4;\n\nconst Canvas = (props) => {\n\n  let prevX, prevY, currX, currY;\n  let pressed = false;\n  let { socket } = props;\n  // console.log(\"SOCKET : \", socket);\n\n  const canvasRef = useRef(null);\n  const memCanvasRef = useRef(null);\n\n  const [strokeColour, setStrokeColour] = useState(\"#141414\");\n  const [lineWidth, setLineWidth] = useState(1);\n  const [shadowBlur, setShadowBlur] = useState(false);\n  const [eraserSelected, setEraserSelected] = useState(false);\n\n\n  const handleResize = () => {\n\n    console.log(\"handleResize called.\");\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // console.log(\"=> ctx\", ctx);\n\n    var memCanvas = memCanvasRef.current;\n    var memCtx = memCanvas.getContext('2d');\n\n\n    let oldWidth = canvas.width;\n    let oldHeight = canvas.height;\n    let newWidth = canvas.parentElement.clientWidth;\n    let newHeight = canvas.parentElement.clientHeight;\n\n\n    // Change Memory Canvas Width\n    memCanvas.width = newWidth;\n    memCanvas.height = newHeight;\n    // Redraw Memory Canvas\n    memCtx.scale(newWidth / oldWidth, newHeight / oldHeight);\n    memCtx.drawImage(canvas, 0, 0);\n    // memCtx.scale(newWidth / oldWidth, newHeight / oldHeight);\n    // console.log(\"SCALE VALUES : \", newWidth / oldWidth, \" and \", newHeight / oldHeight)\n\n    // Now Change Original Canvas\n    canvas.width = newWidth;\n    canvas.height = newHeight;\n    ctx.drawImage(memCanvas, 0, 0);\n\n\n    // ctx.canvas.width = 0.95 * window.innerWidth;\n    // ctx.canvas.height = 0.95 * window.innerHeight;\n\n    // ctx.canvas.width = canvas.parentElement.clientWidth;\n    // ctx.canvas.height = canvas.parentElement.clientHeight;\n\n  }\n\n  const clearCanvas = () => {\n\n    const canvas = canvasRef.current\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  }\n\n  const downloadCanvasAsImage = () => {\n\n    const canvas = canvasRef.current;\n    const img = canvas.toDataURL();\n    var link = document.createElement('a');\n    link.download = 'cnvs_img.png';\n    link.href = img;\n    link.click();\n  }\n\n  useEffect(() => {\n\n    const canvas = canvasRef.current\n\n    const ctx = canvas.getContext('2d');\n\n    ctx.canvas.width = canvas.parentElement.clientWidth;\n    ctx.canvas.height = canvas.parentElement.clientHeight;\n\n\n    window.addEventListener('resize', handleResize);\n  }, [])\n\n  const handleMouseDown = (e) => {\n\n    const canvas = canvasRef.current\n    // console.log(\"canvas.offsetLeft : \", canvas.getBoundingClientRect().left)\n    pressed = true;\n    prevX = e.pageX - canvas.getBoundingClientRect().left;\n    prevY = e.pageY - canvas.getBoundingClientRect().top;\n\n    socket.emit('c_mouse_down', {\n      prevX: prevX,\n      prevY: prevY,\n      strokeColour: eraserSelected ? '#fbfef9' : strokeColour,\n      lineWidth: lineWidth,\n      shadowBlur: shadowBlur\n    })\n  }\n\n  const handleMouseMove = (e) => {\n\n    const canvas = canvasRef.current\n    if (pressed) {\n      currX = e.pageX - canvas.getBoundingClientRect().left;\n      currY = e.pageY - canvas.getBoundingClientRect().top;\n\n      socket.emit('c_mouse_move', {\n        prevX: prevX,\n        prevY: prevY,\n        currX: currX,\n        currY: currY\n      })\n      prevX = currX;\n      prevY = currY;\n    }\n  }\n\n  const handleMouseUp = () => {\n    console.log(\"pressed : \", pressed);\n    pressed = false;\n  }\n\n  const handleMouseOut = () => {\n    pressed = false;\n  }\n\n  useEffect(() => {\n    console.log(\"on vala useEff called.\");\n    const canvas = canvasRef.current\n    const ctx = canvas.getContext('2d')\n\n    socket.on('s_mouse_down', (payload) => {\n      // console.log(\"stroke colour jo mila \", payload.strokeColour)\n      ctx.lineJoin = ctx.lineCap = 'round';\n      ctx.shadowBlur = payload.shadowBlur ? shadowBlurValue : 0;\n      ctx.shadowColor = 'rgba(252,163,17, 0.4)';\n      ctx.strokeStyle = payload.strokeColour;\n      ctx.beginPath();\n      ctx.moveTo(payload.prevX - 1, payload.prevY - 1);\n      // eraserSelected ? \"#fbfef9\" :\n      console.log(\"eraserSelected in s.'on' : \", eraserSelected);\n      ctx.lineWidth = payload.lineWidth;\n      ctx.lineTo(payload.prevX, payload.prevY);\n      ctx.stroke();\n    })\n\n\n    socket.on('s_mouse_move', (payload) => {\n\n      ctx.moveTo(payload.prevX, payload.prevY);\n      ctx.lineTo(payload.currX, payload.currY);\n      ctx.stroke();\n    })\n\n  }, [socket])\n\n\n  return (\n    <>\n      <canvas\n        style={{\n          border: '1px solid red',\n          width: '100vw',\n          height: '100vh',\n          backgroundColor: '#fbfef9',\n          // position: 'absolute'\n        }}\n        onMouseDown={(e) => handleMouseDown(e)}\n        onMouseMove={(e) => handleMouseMove(e)}\n        onMouseUp={handleMouseUp}\n        onMouseOut={handleMouseOut}\n        ref={canvasRef}\n        {...props}\n      ></canvas>\n      <canvas\n        id=\"memCanvas\"\n        ref={memCanvasRef}\n        style={{ display: 'none' }}\n      >\n      </canvas>\n      <ToolKit\n        setStrokeColour={setStrokeColour}\n        lineWidth={lineWidth}\n        setLineWidth={setLineWidth}\n        setShadowBlur={setShadowBlur}\n        setEraserSelected={setEraserSelected}\n        clearCanvas={clearCanvas}\n        downloadCanvasAsImage={downloadCanvasAsImage}\n      />\n    </>\n  );\n}\n\nexport default Canvas;","/home/manav/github/draftstorm-client/src/components/ToolKit/index.js",["65"],"import React, { useState } from 'react';\nimport Draggable from 'react-draggable';\nimport { Card, Button, Select, Divider, Space, InputNumber, Switch, Tooltip } from 'antd';\nimport { ToolOutlined, ClearOutlined, DownloadOutlined } from '@ant-design/icons';\nimport { FaEraser } from \"react-icons/fa\";\nimport ToolToogleButton from '../ToolToggleButton/index';\n\n\nconst hiddenClass = {\n  display: \"none\"\n}\n\nconst { Option } = Select;\n\nconst ToolKit = (props) => {\n\n  const { setStrokeColour, setLineWidth, setShadowBlur, setEraserSelected, clearCanvas, downloadCanvasAsImage } = props;\n  const [vis, setVis] = useState(false);\n  const [eraserButton, setEraserButton] = useState(false);\n\n\n  const handleEraserSelect = () => {\n\n    if (eraserButton) {\n      setEraserSelected(false);\n    } else {\n      setEraserSelected(true);\n    }\n    setEraserButton(!eraserButton);\n  }\n\n  const handleStrokeColourChange = (value) => {\n\n    setStrokeColour(value);\n  }\n\n  const handleLineWidthChange = (value) => {\n\n    setLineWidth(value);\n  }\n\n  const onHighlightChange = (value) => {\n\n    setShadowBlur(value);\n  }\n\n  const handleClearCanvas = () => {\n    clearCanvas();\n  }\n\n  const handleDownload = () => {\n\n    downloadCanvasAsImage();\n  }\n\n  return (\n    <Draggable\n      axis=\"both\"\n      handle=\".handle\"\n      defaultPosition={{ x: 0, y: 0 }}\n      position={null}\n      grid={[25, 25]}\n      scale={1}\n    >\n      <Card\n        size=\"small\"\n        title=\"DraftStorm\"\n        hoverable={true}\n        extra={\n          <ToolToogleButton vis={vis} setVis={setVis} />\n        }\n        style={{ width: 140, borderRadius: 4, position: \"absolute\", top: 20, left: 15 }}\n        className=\"handle\"\n      >\n\n        {/* StrokeColour */}\n        <Space style={vis ? {} : hiddenClass}>\n          <Tooltip placement=\"topRight\" title={'Colour'}>\n            <Select\n              defaultValue=\"#141414\"\n              style={{\n                width: 100\n              }}\n              onChange={handleStrokeColourChange}\n              dropdownAlign={{\n                offset: [+100, -32]\n              }}\n            >\n              <Option value=\"#ef233c\">\n                <Button shape=\"circle\" size=\"small\" style={{ backgroundColor: \"#ef233c\", color: \"#ef233c\", border: 0 }}>.</Button>\n              </Option>\n              <Option value=\"#56cbf9\">\n                <Button shape=\"circle\" size=\"small\" style={{ backgroundColor: \"#56cbf9\", color: \"#56cbf9\", border: 0 }}>.</Button>\n              </Option>\n              <Option value=\"#13c4a3\">\n                <Button shape=\"circle\" size=\"small\" style={{ backgroundColor: \"#13c4a3\", color: \"#13c4a3\", border: 0 }}>.</Button>\n              </Option>\n              <Option value=\"#fde74c\">\n                <Button shape=\"circle\" size=\"small\" style={{ backgroundColor: \"#fde74c\", color: \"#fde74c\", border: 0 }}>.</Button>\n              </Option>\n              <Option value=\"#6c757d\">\n                <Button shape=\"circle\" size=\"small\" style={{ backgroundColor: \"#6c757d\", color: \"#6c757d\", border: 0 }}>.</Button>\n              </Option>\n              <Option value=\"#141414\">\n                <Button shape=\"circle\" size=\"small\" style={{ backgroundColor: \"#141414\", color: \"#141414\", border: 0 }}>.</Button>\n              </Option>\n            </Select>\n          </Tooltip>\n          <Divider />\n        </Space>\n\n        {/* lineWidth */}\n        <Space style={vis ? {} : hiddenClass}>\n          <Tooltip placement=\"topRight\" title={'Size'}>\n            <InputNumber min={1} max={10} defaultValue={1} onChange={handleLineWidthChange} />\n          </Tooltip>\n          <Divider />\n        </Space>\n\n        {/* Hightlight */}\n        <Space style={vis ? {} : hiddenClass}>\n          <Tooltip placement=\"topRight\" title={'Hightlight'}>\n            <Switch onChange={onHighlightChange} size=\"small\" />\n          </Tooltip>\n          <Divider />\n        </Space>\n\n        {/* Eraser */}\n        <Space style={vis ? {} : hiddenClass}>\n          {eraserButton ? (\n            <Tooltip placement=\"right\" title=\"Deselect Eraser\">\n              <Button shape=\"circle\" type=\"primary\" onClick={handleEraserSelect} >\n                <FaEraser />\n              </Button>\n            </Tooltip>\n          ) : (\n              <Tooltip placement=\"right\" title=\"Select Eraser\">\n                <Button shape=\"circle\" type=\"primary\" onClick={handleEraserSelect} ghost>\n                  <FaEraser />\n                </Button>\n              </Tooltip>\n            )}\n          <Divider />\n        </Space>\n\n        {/* Clear Canvas */}\n        <Space style={vis ? {} : hiddenClass}>\n          <Tooltip placement=\"right\" title=\"Clear Canvas\">\n            <Button type=\"primary\" icon={<ClearOutlined />} onClick={handleClearCanvas}>\n              Reset\n          </Button>\n          </Tooltip>\n          <Divider />\n        </Space>\n\n        {/* Download as PNG */}\n        <Space style={vis ? {} : hiddenClass}>\n          <Tooltip placement=\"right\" title=\"Download as PNG\">\n            <Button type=\"primary\" icon={<DownloadOutlined />} onClick={handleDownload}>\n              Download\n          </Button>\n          </Tooltip>\n          <Divider />\n        </Space>\n\n      </Card>\n\n    </Draggable >\n  );\n}\n\nexport default ToolKit;","/home/manav/github/draftstorm-client/src/components/ToolToggleButton/index.js",["66","67","68","69","70","71","72","73","74","75","76"],"import React, { useState } from 'react';\nimport Draggable from 'react-draggable';\nimport { Card, Button, Select, Divider, Space, InputNumber, Switch, Tooltip } from 'antd';\nimport { ToolOutlined, ClearOutlined, DownloadOutlined } from '@ant-design/icons';\nimport { FaEraser } from \"react-icons/fa\";\n\n\nconst ToolToogleButton = (props) => {\n  const { vis, setVis } = props;\n  return (vis ? (\n    <Tooltip placement=\"right\" title=\"Close Tools\">\n      <Button\n        type=\"primary\"\n        shape=\"circle\"\n        onClick={() => setVis(!vis)}\n      >\n        <ToolOutlined />\n      </Button>\n    </Tooltip>\n  ) : (\n      <Tooltip placement=\"right\" title=\"Open Tools\">\n        <Button\n          type=\"primary\"\n          shape=\"circle\"\n          ghost\n          onClick={() => setVis(!vis)}\n        >\n          <ToolOutlined />\n        </Button>\n      </Tooltip>\n    ))\n};\n\nexport default ToolToogleButton;\n",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"85","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":22},{"ruleId":"81","severity":1,"message":"86","line":3,"column":35,"nodeType":"83","messageId":"84","endLine":3,"endColumn":41},{"ruleId":"81","severity":1,"message":"87","line":3,"column":50,"nodeType":"83","messageId":"84","endLine":3,"endColumn":54},{"ruleId":"81","severity":1,"message":"88","line":10,"column":7,"nodeType":"83","messageId":"84","endLine":10,"endColumn":15},{"ruleId":"81","severity":1,"message":"89","line":15,"column":10,"nodeType":"83","messageId":"84","endLine":15,"endColumn":13},{"ruleId":"81","severity":1,"message":"90","line":15,"column":15,"nodeType":"83","messageId":"84","endLine":15,"endColumn":21},{"ruleId":"81","severity":1,"message":"91","line":1,"column":38,"nodeType":"83","messageId":"84","endLine":1,"endColumn":44},{"ruleId":"81","severity":1,"message":"92","line":1,"column":46,"nodeType":"83","messageId":"84","endLine":1,"endColumn":55},{"ruleId":"81","severity":1,"message":"93","line":6,"column":10,"nodeType":"83","messageId":"84","endLine":6,"endColumn":18},{"ruleId":"81","severity":1,"message":"94","line":21,"column":10,"nodeType":"83","messageId":"84","endLine":21,"endColumn":14},{"ruleId":"81","severity":1,"message":"95","line":22,"column":10,"nodeType":"83","messageId":"84","endLine":22,"endColumn":14},{"ruleId":"81","severity":1,"message":"87","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":14},{"ruleId":"81","severity":1,"message":"96","line":8,"column":9,"nodeType":"83","messageId":"84","endLine":8,"endColumn":15},{"ruleId":"81","severity":1,"message":"97","line":8,"column":17,"nodeType":"83","messageId":"84","endLine":8,"endColumn":23},{"ruleId":"81","severity":1,"message":"98","line":8,"column":25,"nodeType":"83","messageId":"84","endLine":8,"endColumn":30},{"ruleId":"81","severity":1,"message":"99","line":8,"column":41,"nodeType":"83","messageId":"84","endLine":8,"endColumn":51},{"ruleId":"81","severity":1,"message":"100","line":8,"column":53,"nodeType":"83","messageId":"84","endLine":8,"endColumn":60},{"ruleId":"81","severity":1,"message":"101","line":8,"column":62,"nodeType":"83","messageId":"84","endLine":8,"endColumn":68},{"ruleId":"81","severity":1,"message":"102","line":10,"column":5,"nodeType":"83","messageId":"84","endLine":10,"endColumn":15},{"ruleId":"81","severity":1,"message":"103","line":17,"column":16,"nodeType":"83","messageId":"84","endLine":17,"endColumn":23},{"ruleId":"81","severity":1,"message":"104","line":18,"column":16,"nodeType":"83","messageId":"84","endLine":18,"endColumn":23},{"ruleId":"81","severity":1,"message":"105","line":20,"column":9,"nodeType":"83","messageId":"84","endLine":20,"endColumn":20},{"ruleId":"81","severity":1,"message":"106","line":26,"column":10,"nodeType":"83","messageId":"84","endLine":26,"endColumn":14},{"ruleId":"81","severity":1,"message":"107","line":28,"column":9,"nodeType":"83","messageId":"84","endLine":28,"endColumn":23},{"ruleId":"81","severity":1,"message":"108","line":33,"column":9,"nodeType":"83","messageId":"84","endLine":33,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":165,"column":6,"nodeType":"111","endLine":165,"endColumn":14,"suggestions":"112"},{"ruleId":"81","severity":1,"message":"113","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":22},{"ruleId":"81","severity":1,"message":"114","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},{"ruleId":"81","severity":1,"message":"115","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":17},{"ruleId":"81","severity":1,"message":"116","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":14},{"ruleId":"81","severity":1,"message":"117","line":3,"column":24,"nodeType":"83","messageId":"84","endLine":3,"endColumn":30},{"ruleId":"81","severity":1,"message":"118","line":3,"column":32,"nodeType":"83","messageId":"84","endLine":3,"endColumn":39},{"ruleId":"81","severity":1,"message":"119","line":3,"column":41,"nodeType":"83","messageId":"84","endLine":3,"endColumn":46},{"ruleId":"81","severity":1,"message":"120","line":3,"column":48,"nodeType":"83","messageId":"84","endLine":3,"endColumn":59},{"ruleId":"81","severity":1,"message":"86","line":3,"column":61,"nodeType":"83","messageId":"84","endLine":3,"endColumn":67},{"ruleId":"81","severity":1,"message":"121","line":4,"column":24,"nodeType":"83","messageId":"84","endLine":4,"endColumn":37},{"ruleId":"81","severity":1,"message":"122","line":4,"column":39,"nodeType":"83","messageId":"84","endLine":4,"endColumn":55},{"ruleId":"81","severity":1,"message":"123","line":5,"column":10,"nodeType":"83","messageId":"84","endLine":5,"endColumn":18},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'socketIOClient' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'ENDPOINT' is assigned a value but never used.","'res' is assigned a value but never used.","'setRes' is assigned a value but never used.","'useRef' is defined but never used.","'createRef' is defined but never used.","'Skeleton' is defined but never used.","'user' is assigned a value but never used.","'room' is assigned a value but never used.","'Header' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","'Breadcrumb' is assigned a value but never used.","'Divider' is assigned a value but never used.","'Button' is assigned a value but never used.","'bgImgStyle' is assigned a value but never used.","'setName' is assigned a value but never used.","'setRoom' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'form' is assigned a value but never used.","'formItemLayout' is assigned a value but never used.","'buttonItemLayout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'eraserSelected'. Either include it or remove the dependency array.","ArrayExpression",["126"],"'ToolOutlined' is defined but never used.","'useState' is defined but never used.","'Draggable' is defined but never used.","'Card' is defined but never used.","'Select' is defined but never used.","'Divider' is defined but never used.","'Space' is defined but never used.","'InputNumber' is defined but never used.","'ClearOutlined' is defined but never used.","'DownloadOutlined' is defined but never used.","'FaEraser' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [eraserSelected, socket]",{"range":"129","text":"130"},[4462,4470],"[eraserSelected, socket]"]